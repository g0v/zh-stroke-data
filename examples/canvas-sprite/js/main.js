// Generated by LiveScript 1.2.0
$(function(){
  var $body, $word, $canvas, canvas, i$, results$ = [];
  $body = $('body');
  $word = $('#word');
  ($canvas = $('<canvas></canvas>')).css('width', $body.width() + "px").css('height', $body.height() + "px").css('position', 'absolute').css('top', 0).css('left"', 0);
  canvas = $canvas.get()[0];
  canvas.width = canvas.offsetWidth = $body.width() / 0.5;
  canvas.height = canvas.offsetHieght = $body.height() / 0.5;
  $body.append($canvas);
  for (i$ in $word.val().sortSurrogates()) {
    results$.push((fn$.call(this, i$, $word.val().sortSurrogates()[i$])));
  }
  return results$;
  function fn$(i, ch){
    var w, ww, width;
    i = parseInt(i, 10);
    w = 2150 * 0.025;
    ww = 2150 * 0.025 * 0.5;
    width = ~~($body.width() / ww);
    return zhStrokeData.loaders.JSON("../data/json/" + ch.codePointAt().toString(16) + ".json").then(function(it){
      var strokes, word, x$;
      strokes = it.map(function(it){
        return new zhStrokeData.Stroke(it);
      });
      word = new zhStrokeData.Comp(strokes);
      x$ = word;
      x$.x = w * ~~(i % width);
      x$.y = w * ~~(i / width);
      x$.scaleX = 0.025;
      x$.scaleY = 0.025;
      x$.time = 1.0;
      x$.render(canvas);
      return x$;
    }).fail(function(it){
      return console.log(ch, it.status);
    });
  }
});